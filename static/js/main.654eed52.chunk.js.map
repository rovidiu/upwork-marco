{"version":3,"sources":["redux/actions.js","redux/notification/actions.js","redux sync /.+/reducer/.js$","redux/input/reducer.js","redux/notification/reducer.js","redux sync /.+/actions/.js$","redux/input/actions.js","utils/funcs.js","languages/index.js","redux/reducers.js","store.js","components/notifications/index.js","layouts/index.js","routes/public-route.js","utils/constants.js","components/input/index.js","components/output/table.js","components/output/chart.js","components/output/index.js","pages/landing/index.js","pages/not-found/index.js","routes/router.js","history.js","index.js"],"names":["req","require","keys","forEach","key","actions","Object","name","module","exports","INFO","ERROR","WARNING","SUCCESS","DISMISS","CLEAR","notificationError","message","type","payload","id","generateTempId","level","notificationSuccess","notificationInfo","notificationWarning","notificationDismiss","map","webpackContext","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","initialState","loading","error","data","submitted","gender","age","email","country","city","date","csv_input","csv_array","state","console","log","SET_CURENT_INPUT","notifications","filter","n","addInputResult","dispatch","getState","a","getLocalizedPath","path","locale","components","split","c","length","routers","languages","component","indexOf","reduce","acc","s4","Math","floor","random","toString","substring","en","reducers","form","intl","routing","thunk","storeName","camelCase","replace","default","composeResetReducer","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","NotificationsContainer","updateNotifications","previousNotifications","props","dismissNotification","messages","previousIds","notification","newIds","notificationSystem","removeNotification","uid","title","translatedTitle","translatedMessage","position","autoDismiss","onRemove","addNotification","this","prevProps","ref","style","React","Component","injectIntl","connect","bindActionCreators","StandardLayout","content","rest","className","PublicRoute","render","COUNTRIES","CITIES","GENDER","InputContainer","onChangeInput","setState","target","value","onChangeSelect","label","onChangeDatePicker","includes","openDatepicker","parr","setOpen","setCsvData","fileInfo","join","submitForm","validator","allValid","onSubmit","showMessages","forceUpdate","csv_file","SimpleReactValidator","autoForceUpdate","required","input","alpha","validators","rule","val","params","helpers","testRegex","AGE","i","push","countriesOptions","genderOptions","citiesOptions","user","placeholder","onChange","onBlur","showMessageFor","classNamePrefix","options","onFileLoaded","selected","placeholderText","dateFormat","onClick","uk-icon","rows","submit","OutputTableContainer","fullTextSearch","newData","values","item","idx","found","children","toLowerCase","filteredData","isFiltered","sortOrder","sortData","sortBy","tableData","selKey","charAt","toUpperCase","slice","sortedData","sort","b","concat","currPage","totalRows","theader","tbody","fulltext","thVal","scope","trVal","tdVal","tdIdx","CustomizedXAxisTick","x","y","transform","dx","dy","textAnchor","OutputChartContainer","chartData","rowData","product","price","width","height","margin","top","right","left","bottom","dataKey","interval","tickSize","tick","angle","offset","fill","OutputContainer","dateFormated","moment","format","addInputResultRedux","Landing","handleSubmit","formValues","currentTab","landing","role","data-toggle","href","aria-controls","aria-selected","output","aria-labelledby","routes","history","exact","createRoutes","NotFound","browserHistory","createBrowserHistory","updateIntl","App","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.654eed52.chunk.js","sourcesContent":["// https://github.com/diegohaz/arc/wiki/Actions\r\nconst req = require.context('.', true, /\\.\\/.+\\/actions\\.js$/)\r\n\r\nreq.keys().forEach((key) => {\r\n  const actions = req(key)\r\n  \r\n  Object.keys(actions).forEach((name) => {\r\n    module.exports[name] = actions[name]\r\n  })\r\n})\r\n","import { generateTempId } from '../../utils/funcs'\r\n\r\nexport const INFO = 'NOTIFICATIONS/INFO'\r\nexport const ERROR = 'NOTIFICATIONS/ERROR'\r\nexport const WARNING = 'NOTIFICATIONS/WARNING'\r\nexport const SUCCESS = 'NOTIFICATIONS/SUCCESS'\r\nexport const DISMISS = 'NOTIFICATIONS/DISMISS'\r\nexport const CLEAR = 'NOTIFICATIONS/CLEAR'\r\n\r\nexport const notificationError = (message) => ({\r\n  type: ERROR,\r\n  payload: {\r\n    id: `noti-error-${generateTempId()}`,\r\n    level: 'error',\r\n    message: message,\r\n  },\r\n})\r\n\r\nexport const notificationSuccess = (message) => ({\r\n  type: SUCCESS,\r\n  payload: {\r\n    id: `noti-success-${generateTempId()}`,\r\n    level: 'success',\r\n    message,\r\n  },\r\n})\r\n\r\nexport const notificationInfo = (message) => ({\r\n  type: INFO,\r\n  payload: {\r\n    id: `noti-info-${generateTempId()}`,\r\n    level: 'info',\r\n    message,\r\n  },\r\n})\r\n\r\nexport const notificationWarning = (message) => ({\r\n  type: WARNING,\r\n  payload: {\r\n    id: `noti-warning-${generateTempId()}`,\r\n    level: 'warning',\r\n    message,\r\n  },\r\n})\r\n\r\nexport const notificationDismiss = (id) => ({\r\n  type: DISMISS,\r\n  payload: id,\r\n})\r\n","var map = {\n\t\"./input/reducer.js\": 553,\n\t\"./notification/reducer.js\": 555\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 552;","import {\r\n  SET_CURENT_INPUT,\r\n} from './actions'\r\n\r\nexport const initialState = {\r\n  loading: false,\r\n  error: null,\r\n  data: {\r\n    submitted: false,\r\n    name: null,\r\n    gender: null,\r\n    age: null,\r\n    email: null,\r\n    country: null,\r\n    city: '',\r\n    date: '',\r\n    csv_input: null,\r\n    csv_array: [],\r\n  },\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  console.log('reducer', type, payload)\r\n  \r\n  switch (type) {\r\n    case SET_CURENT_INPUT:\r\n      return {\r\n        ...state,\r\n        data: {\r\n          ...payload\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  ERROR, SUCCESS, WARNING, INFO, DISMISS, CLEAR,\r\n} from './actions'\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n}\r\n\r\n/**\r\n *\r\n * @param state\r\n * @param type\r\n * @param payload:\r\n *        type: 'ERROR', 'SUCCESS', 'INFO', 'WARNING' => {id, level, message}\r\n *        type: 'DISMISS' => id\r\n *        type: 'CLEAR' => nothing\r\n */\r\nexport default (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ERROR:\r\n    case SUCCESS:\r\n    case WARNING:\r\n    case INFO:\r\n      return {\r\n        ...state,\r\n        notifications: [...state.notifications, payload],\r\n      }\r\n    case DISMISS:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter((n) => n.id !== payload),\r\n      }\r\n    case CLEAR:\r\n      return {\r\n        ...initialState,\r\n      }\r\n    default:\r\n  }\r\n\r\n  return { ...state }\r\n}\r\n","var map = {\n\t\"./input/actions.js\": 62,\n\t\"./notification/actions.js\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 565;","export const SET_CURENT_INPUT = 'SET_CURENT_INPUT'\r\nexport function addInputResult(data) {\r\n  return async (dispatch, getState) => {\r\n    dispatch({\r\n      type: 'SET_CURENT_INPUT',\r\n      payload: data,\r\n    })\r\n  }\r\n}\r\n","import languages from '../languages'\r\n\r\nexport function getLocalizedPath(path, locale) {\r\n  let components = path.split('/').filter(c => c.length > 0)\r\n  \r\n  const {\r\n    routers,\r\n  } = languages[locale]\r\n  \r\n  const keys = Object.keys(routers)\r\n  \r\n  components = components.map(component => (keys.indexOf(component) > -1 ? routers[component] : component))\r\n  return components.reduce((acc, component) => (`${acc}/${component}`), `/${locale}`)\r\n}\r\n\r\nexport const generateTempId = () => {\r\n  const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1)\r\n  \r\n  return `${s4()}${s4()}-${s4()}`\r\n}","import en from './en.json'\r\n\r\nconst languages = {\r\n  en,\r\n}\r\n\r\nexport default languages\r\n","// https://github.com/diegohaz/arc/wiki/Reducers\r\nimport camelCase from 'lodash/camelCase'\r\nimport { combineReducers } from 'redux'\r\nimport { reducer as form } from 'redux-form'\r\nimport { reducer as thunk } from 'redux-saga-thunk'\r\nimport { intlReducer as intl } from 'react-intl-redux'\r\nimport { routerReducer as routing } from 'react-router-redux'\r\nimport { composeResetReducer } from 'redux-reset-store'\r\n\r\nconst reducers = {\r\n  form,\r\n  intl,\r\n  routing,\r\n  thunk,\r\n}\r\n\r\nconst req = require.context('.', true, /\\.\\/.+\\/reducer\\.js$/)\r\n\r\nreq.keys().forEach((key) => {\r\n  const storeName = camelCase(key.replace(/\\.\\/(.+)\\/.+$/, '$1'))\r\n  reducers[storeName] = req(key).default\r\n})\r\n\r\nexport default composeResetReducer(combineReducers(reducers))\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducers from './redux/reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'upwork',\r\n  storage,\r\n  whitelist: [''],\r\n}\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport const store = createStore(persistedReducer, applyMiddleware(thunk))\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default { store, persistor }\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { injectIntl } from 'react-intl'\r\nimport NotificationSystem from 'react-notification-system'\r\nimport { notificationDismiss } from '../../redux/actions'\r\n\r\nimport './style.css'\r\n\r\nclass NotificationsContainer extends React.Component {\r\n  componentDidMount() {\r\n    if (this.props.notifications) {\r\n      this.updateNotifications()\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.notifications && this.props.notifications !== prevProps.notifications) {\r\n      this.updateNotifications(prevProps.notifications)\r\n    }\r\n  }\r\n\r\n  getNotificationMessage(notification) {\r\n\r\n  }\r\n\r\n  updateNotifications = (previousNotifications = null) => {\r\n    const {\r\n      notifications,\r\n      dismissNotification,\r\n      intl: {\r\n        messages,\r\n      },\r\n    } = this.props\r\n    const previousIds = previousNotifications && previousNotifications.map((notification) => notification.id)\r\n    const newIds = notifications && notifications.map((notification) => notification.id)\r\n    if (previousNotifications) {\r\n      previousNotifications\r\n        .filter((notification) => newIds.indexOf(notification.id) < 0)\r\n        .map((notification) => this.notificationSystem.removeNotification(notification.id))\r\n    }\r\n    \r\n    if (notifications) {\r\n      notifications\r\n        .filter((notification) => previousIds.indexOf(notification.id) < 0)\r\n        .map((notification) => ({\r\n          uid: notification.id,\r\n          title: notification.translatedTitle || notification.title || messages[`notification_fallback_title_${notification.level}`],\r\n          message: notification.translatedMessage || notification.message || messages[`notification_fallback_message_${notification.level}`],\r\n          level: notification.level,\r\n          position: 'tc',\r\n          autoDismiss: 6,\r\n          onRemove: () => dismissNotification(notification.id),\r\n        }))\r\n        .filter((notification) => notification.message)\r\n        .map((notification) => this.notificationSystem.addNotification(notification))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { notifications } = this.props\r\n\r\n    if (!notifications) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <NotificationSystem ref={(c) => { this.notificationSystem = c }} style={false} />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notification.notifications,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n  dismissNotification: notificationDismiss,\r\n}, dispatch)\r\n\r\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(NotificationsContainer))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { injectIntl } from 'react-intl'\r\n\r\nclass StandardLayout extends React.Component {\r\n  render() {\r\n    const {\r\n      content: Component,\r\n      ...rest\r\n    } = this.props\r\n    \r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row flex-xl-nowrap\">\r\n          <Component {...rest} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nStandardLayout.propTypes = {\r\n  content: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = (state = {}) => ({})\r\n\r\nexport default injectIntl(connect(mapStateToProps)(StandardLayout))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport StandardLayout from '../layouts'\r\n\r\nconst PublicRoute = ({\r\n  locale, component, ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        props => (\r\n          <StandardLayout\r\n            {...props}\r\n            content={component}\r\n          />\r\n        )\r\n    }\r\n    />\r\n  )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  component: PropTypes.func\r\n}\r\nexport default PublicRoute\r\n","export const COUNTRIES = [\r\n  \"Russia\",\r\n  \"UK\",\r\n  \"Germany\",\r\n  \"Spain\",\r\n  \"Italy\",\r\n  \"Ukraine\",\r\n  \"France\",\r\n  \"Romania\",\r\n  \"Hungary\",\r\n  \"Belarus\",\r\n  \"Poland\",\r\n  \"Serbia\",\r\n  \"Austria\",\r\n  \"Czech Republic\",\r\n  \"Bulgaria\",\r\n  \"Croatia\",\r\n  \"Latvia\",\r\n  \"Sweden\",\r\n  \"Netherlands\",\r\n  \"Moldova\",\r\n  \"Lithuania\",\r\n  \"Portugal\",\r\n  \"Finland\",\r\n  \"Bosnia\",\r\n  \"Norway\",\r\n  \"Denmark\",\r\n];\r\n\r\nexport const CITIES = [\r\n  \"Moscow\",\r\n  \"LONDON\",\r\n  \"St Petersburg\",\r\n  \"BERLIN\",\r\n  \"MADRID\",\r\n  \"ROMA\",\r\n  \"KIEV\",\r\n  \"PARIS\",\r\n  \"Bucharest\",\r\n  \"BUDAPEST\",\r\n  \"Hamburg\",\r\n];\r\n\r\nexport const GENDER = [\r\n  \"male\",\r\n  \"female\"\r\n];\r\n\r\nexport const MIN_LISTING_TEXT_SEARCH_LNGTH = 3;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { injectIntl } from 'react-intl'\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport Select from 'react-select'\r\nimport DatePicker from 'react-datepicker'\r\nimport CSVReader from 'react-csv-reader'\r\n\r\nimport {COUNTRIES, GENDER, CITIES} from '../../utils/constants'\r\n\r\nimport './style.css'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nclass InputContainer extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    this.state = {\r\n      name: '',\r\n      gender: {},\r\n      age: {},\r\n      email: '',\r\n      country: {},\r\n      city: {},\r\n      date: '',\r\n      csv_file: '',\r\n      csv_input: '',\r\n      csv_array: [],\r\n    }\r\n  }\r\n  \r\n  componentWillMount() {\r\n    const {\r\n      intl: {\r\n        locale,\r\n        messages\r\n      }\r\n    } = this.props\r\n    \r\n    this.validator = new SimpleReactValidator({\r\n      autoForceUpdate: this,\r\n      className: 'uk-text-danger',\r\n      locale: `${locale}`,\r\n      messages: {\r\n        required: messages.input.req.required,\r\n        alpha: messages.input.req.alpha,\r\n        email: messages.input.req.email,\r\n      },\r\n      validators: {\r\n        name: {  // name the rule\r\n          message: 'The name must be composed from first_name and last_name separated by space.',\r\n          rule: (val, params, validator) => {\r\n            return validator.helpers.testRegex(val, /^[A-Z][a-z]+[\\s|,][A-Z][a-z]{1,19}$/i) && params.indexOf(val) === -1\r\n          },\r\n          required: true  // optional\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * on change for the text inputs save into state\r\n   * @param e\r\n   */\r\n  onChangeInput = (e) => {\r\n    this.setState({\r\n      [`${e.target.name}`]: e.target.value\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * on change select - set into state\r\n   * @param value\r\n   * @param label\r\n   */\r\n  onChangeSelect = (value, label) => {\r\n    this.setState({\r\n      [`${label}`]: value\r\n    })\r\n  }\r\n  \r\n  /**\r\n   * datepicker change event\r\n   * @param date\r\n   * @param label\r\n   */\r\n  onChangeDatePicker = (date, label) => {\r\n    if (Object.keys(this.state).includes(label)) {\r\n      this.setState({\r\n        [`${label}`]: date\r\n      })\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * event for open the datepicker calendar\r\n   * @param parr\r\n   */\r\n  openDatepicker = (parr) => {\r\n    this['_ref_calendar_' + parr].setOpen(true)\r\n  }\r\n  \r\n  /**\r\n   * on upload the csv file, save into state the content of it\r\n   * @param data\r\n   * @param fileInfo\r\n   */\r\n  setCsvData = (data, fileInfo) => {\r\n    if (data && data.length) {\r\n      this.setState({\r\n        csv_input: data.join('\\r\\n'),\r\n        csv_array: data\r\n      })\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * submit form\r\n   */\r\n  submitForm = () => {\r\n    if (this.validator.allValid()) {\r\n      this.props.onSubmit(this.state)\r\n    } else {\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      intl: {\r\n        messages\r\n      }\r\n    } = this.props\r\n    \r\n    const {\r\n      name,\r\n      gender,\r\n      age,\r\n      email,\r\n      country,\r\n      city,\r\n      date,\r\n      csv_file,\r\n      csv_input\r\n    } = this.state\r\n    \r\n    let AGE = []\r\n    for(var i = 0; i <= 120; i++){\r\n      AGE.push({\r\n        value: i,\r\n        label: i\r\n      })\r\n    }\r\n    \r\n    let countriesOptions = []\r\n    if (COUNTRIES && COUNTRIES.length) {\r\n      COUNTRIES.forEach((country) => {\r\n        countriesOptions.push({\r\n          value: country,\r\n          label: country\r\n        })\r\n      })\r\n    }\r\n  \r\n    let genderOptions = []\r\n    if (GENDER && GENDER.length) {\r\n      GENDER.forEach((gender) => {\r\n        genderOptions.push({\r\n          value: gender,\r\n          label: gender\r\n        })\r\n      })\r\n    }\r\n  \r\n    let citiesOptions = []\r\n    if (CITIES && CITIES.length) {\r\n      CITIES.forEach((city) => {\r\n        citiesOptions.push({\r\n          value: city,\r\n          label: city\r\n        })\r\n      })\r\n    }\r\n    \r\n    return (\r\n      <form>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h2>{messages.input.user}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-8\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                placeholder={messages.input.name}\r\n                onChange={(e) => this.onChangeInput(e)}\r\n                onBlur={() => this.validator.showMessageFor('name')}\r\n              />\r\n              {this.validator.message('name', name, 'name')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm-6 col-md-2\">\r\n            <div className=\"form-group\">\r\n              <Select\r\n                name='gender'\r\n                classNamePrefix=\"select\"\r\n                options={genderOptions}\r\n                value={gender}\r\n                onChange={(e) => this.onChangeSelect(e, 'gender')}\r\n                onBlur={() => this.validator.showMessageFor('gender')}\r\n                placeholder={messages.input.gender}\r\n              />\r\n              {this.validator.message('gender', gender, 'required')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm-6 col-md-2\">\r\n            <div className=\"form-group\">\r\n              <Select\r\n                name='age'\r\n                classNamePrefix=\"select\"\r\n                options={AGE}\r\n                value={age}\r\n                onChange={(e) => this.onChangeSelect(e, 'age')}\r\n                onBlur={() => this.validator.showMessageFor('age')}\r\n                placeholder={messages.input.age}\r\n              />\r\n              {this.validator.message('age', age, 'required')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-8\">\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                value={email}\r\n                placeholder={messages.input.email}\r\n                onChange={(e) => this.onChangeInput(e)}\r\n                onBlur={() => this.validator.showMessageFor('email')}\r\n              />\r\n              {this.validator.message('email', email, 'required|email')}\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"col-sm-6 col-md-2\">\r\n            <div className=\"form-group\">\r\n              <Select\r\n                name='country'\r\n                classNamePrefix=\"select\"\r\n                options={countriesOptions}\r\n                value={country}\r\n                onChange={(e) => this.onChangeSelect(e, 'country')}\r\n                onBlur={() => this.validator.showMessageFor('country')}\r\n                placeholder={messages.input.country}\r\n              />\r\n              {this.validator.message('country', country, 'required')}\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"col-sm-6 col-md-2\">\r\n            <div className=\"form-group\">\r\n              <Select\r\n                name='city'\r\n                classNamePrefix=\"select\"\r\n                options={citiesOptions}\r\n                value={city}\r\n                onChange={(e) => this.onChangeSelect(e, 'city')}\r\n                onBlur={() => this.validator.showMessageFor('city')}\r\n                placeholder={messages.input.city}\r\n              />\r\n              {this.validator.message('city', city, 'required')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h2>{messages.input.data}</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-10\">\r\n            <div className=\"form-group\">\r\n              <CSVReader\r\n                onFileLoaded={(data, fileInfo) => this.setCsvData(data, fileInfo)}\r\n              />\r\n            </div>\r\n          </div>\r\n  \r\n          <div className=\"col-sm-6 col-md-2\">\r\n            <div className=\"form-group\">\r\n              <div className=\"uk-flex uk-flex-column\">\r\n                <div className=\"uk-flex uk-flex-row uk-flex-middle date-select\">\r\n                  <DatePicker\r\n                    name=\"date\"\r\n                    className=\"form-control\"\r\n                    selected={date}\r\n                    placeholderText={messages.input.date}\r\n                    onChange={(e) => this.onChangeDatePicker(e, 'date')}\r\n                    value={date}\r\n                    dateFormat=\"dd-MM-yyyy\"\r\n                    onBlur={() => this.validator.showMessageFor('date')}\r\n                    ref={(c) => this['_ref_calendar_date'] = c}\r\n                  />\r\n                  <label className='date-label' onClick={() => this.openDatepicker('date')}><span uk-icon=\"icon: calendar; ratio: 1.5\"></span></label>\r\n                </div>\r\n                {this.validator.message('date', date, 'required')}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                rows=\"30\"\r\n                name=\"csv_input\"\r\n                className=\"form-control\"\r\n                value={csv_input}\r\n                placeholder={messages.input.csv_input}\r\n                onChange={(e) => this.onChangeInput(e)}\r\n                onBlur={() => this.validator.showMessageFor('csv_input')}\r\n              />\r\n              {this.validator.message('csv_input', csv_input, 'required')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"form-group\">\r\n              <div className='btns' onClick={() => this.submitForm()}>{messages.input.submit}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\r\n\r\n}, dispatch)\r\n\r\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(InputContainer))\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { injectIntl } from 'react-intl'\r\nimport PropTypes from 'prop-types'\r\nimport { MIN_LISTING_TEXT_SEARCH_LNGTH } from '../../utils/constants'\r\n\r\nimport './style.css'\r\n\r\nclass OutputTableContainer extends React.Component {\r\n  static propTypes = {\r\n    data: PropTypes.array,\r\n  }\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    \r\n    this.state = {\r\n      filteredData: [],\r\n      isFiltered: false,\r\n      currPage: 1,\r\n      totalRows: 31,\r\n      loading: false,\r\n      sortOrder: 'asc',\r\n      sortBy: '',\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * full text search - parse the csv input array and return the results that match the price of product name with the value received - search only when searched word length is bigger than 3\r\n   * @param value\r\n   * @returns {Promise<void>}\r\n   */\r\n  fullTextSearch = async (value) => {\r\n    const {\r\n      data,\r\n    } = this.props\r\n    \r\n    let newData = []\r\n    \r\n    if (value.length >= MIN_LISTING_TEXT_SEARCH_LNGTH) {\r\n      this.setState({\r\n        loading: true\r\n      })\r\n      \r\n      await Object.values(data).forEach((item, idx) => {\r\n        let found = false\r\n        \r\n        if(idx === 0) {\r\n          newData.push(item)\r\n        } else {\r\n          if (item.length) {\r\n            Object.values(item).forEach((children) => {\r\n              if (children && children.toString().toLowerCase().indexOf(value) > -1) {\r\n                if (found) return\r\n                found = true\r\n                newData.push(item)\r\n              }\r\n            })\r\n          }\r\n        }\r\n      })\r\n      \r\n      this.setState({\r\n        filteredData: newData,\r\n        isFiltered: true,\r\n        loading: false\r\n      })\r\n    }else {\r\n      this.setState({\r\n        data: this.props.data,\r\n        isFiltered: false,\r\n        loading: false,\r\n      })\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * save into state the value of sort order\r\n   * @param value\r\n   * @returns {Promise<void>}\r\n   */\r\n  sortOrder = async (value) => {\r\n    this.setState({\r\n      sortOrder: value\r\n    }, async () => {\r\n      await this.sortData();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * save into state the value of sort by\r\n   * @param value\r\n   * @returns {Promise<void>}\r\n   */\r\n  sortBy = async (value) => {\r\n    this.setState({\r\n      sortBy: value\r\n    }, async () => {\r\n      await this.sortData();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * sorting data from the table\r\n   * if table is filtered, apply sorting on it\r\n   */\r\n  sortData = () => {\r\n    const {\r\n      data,\r\n      intl: {\r\n        messages\r\n      }\r\n    } = this.props\r\n  \r\n    const {\r\n      filteredData,\r\n      isFiltered,\r\n      sortBy,\r\n      sortOrder\r\n    } = this.state\r\n  \r\n    let tableData = []\r\n    if (!isFiltered && data) {\r\n      tableData = data\r\n    } else {\r\n      tableData = filteredData\r\n    }\r\n    \r\n    const selKey = tableData[0].indexOf(sortBy.charAt(0).toUpperCase() + sortBy.slice(1))\r\n    let sortedData = []\r\n    if (sortOrder === 'asc') {\r\n      sortedData = tableData.slice(1).sort((a, b) => a[selKey].toLowerCase() > b[selKey].toLowerCase() ? 1 : -1)\r\n    } else {\r\n      sortedData = tableData.slice(1).sort((a, b) => b[selKey].toLowerCase() > a[selKey].toLowerCase() ? 1 : -1)\r\n    }\r\n    \r\n    const newData = tableData.slice(0, 1).concat(sortedData)\r\n    \r\n    this.setState({\r\n      isFiltered: true,\r\n      filteredData: newData\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      data,\r\n      intl: {\r\n        messages\r\n      }\r\n    } = this.props\r\n    \r\n    const {\r\n      filteredData,\r\n      isFiltered,\r\n      currPage,\r\n      totalRows,\r\n      sortOrder,\r\n      sortBy\r\n    } = this.state\r\n    \r\n    let tableData = []\r\n    if (!isFiltered && data) {\r\n      tableData = data\r\n    } else {\r\n      tableData = filteredData\r\n    }\r\n    \r\n    const theader = tableData && tableData.length ? tableData[0] : []\r\n    const tbody = tableData && tableData.length ? tableData.slice(currPage, currPage * totalRows + 1) : []\r\n    \r\n    const totalPages = tableData / totalRows\r\n    \r\n    return (\r\n      <>\r\n        <table className=\"table\">\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type='text'\r\n                  className='search'\r\n                  name='fullTextSearch'\r\n                  onChange={(e) => this.fullTextSearch(e.target.value)}\r\n                  placeholder={messages.input.fulltext}\r\n                />\r\n                \r\n              </td>\r\n              <td>\r\n                <select\r\n                  className='select'\r\n                  name='sortBy'\r\n                  onChange={(e) => this.sortBy(e.target.value)}\r\n                  placeholder={messages.input.sortBy}\r\n                  value={sortBy}\r\n                >\r\n                  <option value=\"none\">Sort by</option>\r\n                  {theader ? theader.map((thVal, idx) => {\r\n                    return <option\r\n                      key={`option-${idx}`}\r\n                      value={`${thVal.toLowerCase()}`}>\r\n                      {thVal}\r\n                    </option>\r\n                  }) : ''}\r\n                  \r\n                </select>\r\n              </td>\r\n              <td>\r\n                <select\r\n                  className='select'\r\n                  name='sortOrder'\r\n                  onChange={(e) => this.sortOrder(e.target.value)}\r\n                  placeholder={messages.input.sortOrder}\r\n                  value={sortOrder}\r\n                >\r\n                  <option value=\"asc\" >Asc</option>\r\n                  <option value=\"desc\">Desc</option>\r\n    \r\n                </select>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        \r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              {theader ? theader.map((thVal, idx) => {\r\n                return <th\r\n                key={`th-${idx}`}\r\n                scope=\"col\">{thVal}</th>\r\n              }) : ''}\r\n            </tr>\r\n          \r\n          </thead>\r\n          <tbody>\r\n            {tbody ? tbody.map((trVal, idx) => {\r\n              return (\r\n                <tr\r\n                  key={`row-${idx}`}\r\n                >\r\n                  {trVal ? trVal.map((tdVal, tdIdx) => {\r\n                    return <td\r\n                      key={`col-${idx}-${tdIdx}`}\r\n                    >{tdVal}</td>\r\n                  }) : ''}\r\n                </tr>\r\n              )\r\n            }) : ''}\r\n          </tbody>\r\n        </table>\r\n        \r\n        <div className=\"pagination\">\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(OutputTableContainer))\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { injectIntl } from 'react-intl'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label\r\n} from 'recharts';\r\n\r\nimport './style.css'\r\n\r\n/**\r\n * tick for the x axis from the chart - we need to add this component in order to make it appear right\r\n */\r\nclass CustomizedXAxisTick extends React.Component {\r\n  render() {\r\n    const { x, y, payload } = this.props;\r\n    \r\n    return (\r\n      <g transform={`translate(${x},${y})`}>\r\n        <text x={0} y={0} dx={-5} dy={2} textAnchor=\"end\" transform=\"rotate(-90)\" className=\"customized-y-axis-tick-text\">\r\n          {`${payload.value}`}\r\n        </text>\r\n      </g>\r\n    );\r\n  }\r\n}\r\n\r\nclass OutputChartContainer extends React.Component {\r\n  static propTypes = {\r\n    data: PropTypes.array,\r\n  }\r\n  \r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const {\r\n      data\r\n    } = this.props\r\n    \r\n    let chartData = []\r\n    let chartXKey = '',\r\n      chartYKey = ''\r\n    if (data && data.length) {\r\n      chartXKey = data[0][0]\r\n      chartYKey = data[0][1]\r\n      data.slice(1).forEach((rowData) => {\r\n        chartData.push({\r\n          name: rowData[0],\r\n          product: rowData[0],\r\n          price: rowData[1]\r\n        })\r\n      })\r\n    }\r\n   \r\n    return (\r\n      <div style={{ width: '100%', height: 400 }}>\r\n        <ResponsiveContainer>\r\n          <BarChart\r\n            data={chartData}\r\n            margin={{\r\n              top: 10, right: 30, left: 0, bottom: 150,\r\n            }}\r\n          >\r\n            <XAxis\r\n              dataKey=\"name\"\r\n              interval={0}\r\n              tickSize={3}\r\n              tick={ <CustomizedXAxisTick /> }\r\n            >\r\n              <Label\r\n                value=\"Product\"\r\n                position=\"insideBottom\"\r\n                angle={0}\r\n                style={{ textAnchor: 'middle' }}\r\n                offset={-120}\r\n              />\r\n            </XAxis>\r\n            \r\n            <YAxis type=\"number\">\r\n              <Label\r\n                value=\"Price\"\r\n                position=\"insideLeft\"\r\n                angle={-90}\r\n                style={{ textAnchor: 'middle' }}\r\n              />\r\n            </YAxis>\r\n            <Tooltip />\r\n            \r\n            <Bar dataKey=\"price\" fill=\"#82ca9d\" />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default injectIntl(connect(null, null)(OutputChartContainer))\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { injectIntl } from 'react-intl'\r\nimport moment from 'moment'\r\nimport {addInputResult as addInputResultRedux} from '../../redux/input/actions'\r\nimport OutputTableContainer from './table'\r\nimport OutputChartContainer from './chart'\r\n\r\nimport './style.css'\r\n\r\nclass OutputContainer extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      input\r\n    } = this.props\r\n    \r\n    const dateFormated = moment(input.date).format('YYYY-MM-DD')\r\n    \r\n    const tableData = input.csv_array ? input.csv_array : []\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 d-flex justify-content-end\">\r\n            {input.name}, {input.gender && input.gender.label ? input.gender.label : ''}, {input.age && input.age.label ? input.age.label : ''}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-4\">\r\n            {dateFormated}\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-10\">\r\n            <div className=\"d-flex justify-content-end\">\r\n              {input.city && input.city.label ? input.city.label : ''} {input.country && input.country.label ? input.country.label : ''} {input.email}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"row\">\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <OutputTableContainer\r\n              data={tableData}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-12 col-md-6\">\r\n            <OutputChartContainer\r\n              data={tableData}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    input: state.input.data\r\n  }\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => bindActionCreators({\r\n  addInputResult: addInputResultRedux,\r\n}, dispatch)\r\n\r\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProp)(OutputContainer))\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { injectIntl } from 'react-intl'\r\n\r\nimport InputContainer from '../../components/input'\r\nimport OutputContainer from '../../components/output'\r\n\r\nimport {\r\n  addInputResult as addInputResultRedux,\r\n} from \"../../redux/input/actions\";\r\n\r\nimport './style.css'\r\n\r\nclass Landing extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    \r\n    this.state = {\r\n      currentTab: 'input'\r\n    }\r\n  }\r\n  \r\n  handleSubmit = async (formValues) => {\r\n    const {\r\n      addInputResult\r\n    } = this.props\r\n    \r\n    if(!formValues.submitted){\r\n      const addedAssociation = await addInputResult(formValues)\r\n      this.setState({\r\n        currentTab: 'output'\r\n      })\r\n    } else {\r\n      // updateAssociation(formValues)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n        intl: {\r\n          messages,\r\n        },\r\n    } = this.props\r\n    \r\n    const {\r\n      currentTab\r\n    } = this.state\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <h1 className='tagline'>{messages.landing.title}</h1>\r\n          </div>\r\n          \r\n          <div className=\"row\">\r\n            <ul className=\"nav nav-pills mb-12\" id=\"pills-tab\" role=\"tablist\">\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${currentTab === 'input' ? 'active show' : ''}`} id=\"pills-input-tab\" data-toggle=\"pill\" href=\"#pills-input\" role=\"tab\" aria-controls=\"pills-home\" aria-selected=\"true\">{messages.landing.input}</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${currentTab === 'output' ? 'active show' : ''}`} id=\"pills-output-tab\" data-toggle=\"pill\" href=\"#pills-output\" role=\"tab\" aria-controls=\"pills-output\" aria-selected=\"false\">{messages.landing.output}</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"pills-tabContent\">\r\n              <div className={`tab-pane fade ${currentTab === 'input' ? 'active show' : ''}`} id=\"pills-input\" role=\"tabpanel\" aria-labelledby=\"pills-input-tab\">\r\n                <InputContainer\r\n                  onSubmit = {this.handleSubmit}\r\n                />\r\n              </div>\r\n              <div className={`tab-pane fade ${currentTab === 'output' ? 'active show' : ''}`} id=\"pills-output\" role=\"tabpanel\" aria-labelledby=\"pills-output-tab\">\r\n                <OutputContainer />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    input: state.input.data\r\n  }\r\n}\r\n\r\nconst mapDispatchToProp = dispatch => bindActionCreators({\r\n  addInputResult: addInputResultRedux,\r\n}, dispatch)\r\n\r\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProp)(Landing))\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { injectIntl } from 'react-intl'\r\n\r\nimport {getLocalizedPath} from \"../../utils/funcs\";\r\n\r\nconst NotFound = ({ intl }) => (\r\n  <div className=\"container\">\r\n    <div className=\"row\">\r\n      <h1>Not found</h1>\r\n      \r\n      <div className=\"not-found-medium\">\r\n        <p className=\"back-home\"><a href={getLocalizedPath('/', intl.locale)}>Home</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nNotFound.propTypes = {\r\n  intl: PropTypes.object,\r\n}\r\n\r\nexport default injectIntl(NotFound)\r\n","import React from 'react'\r\nimport { Router, Switch } from 'react-router-dom'\r\nimport PublicRoute from './public-route'\r\nimport languages from '../languages'\r\n\r\nimport Landing from '../pages/landing'\r\nimport NotFound from '../pages/not-found'\r\n\r\nconst createRoutes = (store) => {\r\n  let routes = []\r\n  \r\n  Object.keys(languages).forEach((locale) => {\r\n    const props = {\r\n      store,\r\n      locale,\r\n    }\r\n\r\n    routes = routes.concat([\r\n      <PublicRoute key={`${locale}-home-route`} {...props} exact path={`/${locale}`} component={Landing} />,\r\n    ])\r\n  })\r\n\r\n  return routes\r\n}\r\n\r\nconst routes = (history, store) => (\r\n  <Router history={history}>\r\n    <Switch>\r\n      <PublicRoute exact path=\"/\" component={Landing} />,\r\n      {createRoutes(store)}\r\n      <PublicRoute exact path=\"*\" component={NotFound} />,\r\n    </Switch>\r\n  </Router>\r\n)\r\n\r\nexport default routes\r\n","import { createBrowserHistory } from 'history'\r\n\r\nconst browserHistory = createBrowserHistory()\r\n\r\nexport default browserHistory\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, updateIntl } from 'react-intl-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './store'\nimport NotificationsContainer from './components/notifications'\nimport router from './routes/router'\nimport browserHistory from './history'\nimport languages from './languages'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst locale = 'en'\n\nstore.dispatch(updateIntl({\n  locale,\n  messages: languages[locale],\n}))\n\nclass App extends React.Component {\n  componentDidMount(){\n  }\n  \n  render() {\n    return (\n      <Provider\n        store={store}\n      >\n        <PersistGate loading={null} persistor={persistor}>\n          <div>\n            <NotificationsContainer />\n            {router(browserHistory)}\n          </div>\n        </PersistGate>\n      </Provider>\n    )\n  }\n}\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}